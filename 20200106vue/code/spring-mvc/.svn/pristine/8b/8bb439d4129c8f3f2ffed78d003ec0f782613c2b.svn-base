<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>shopping-web</display-name>
  
 
  
  <!-- 配置root容器的配置文件路径 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:root.xml</param-value>
	</context-param>
	<!--1. 第一个容器 监听器 监听ServletContext对象的创建和销毁的
	
		用来初始化一个叫Root的ioc容器 类型 WebApplicationContext
		root容器它是servlet的 ioc容器的父容器 
		
		子容器可以使用父容器里面的对象
		
		但是父容器是不能使用子容器中的对象的
	 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
  
  <!--
  	2. 第二个容器   servlet 容器  负责创建web层相关的对象（controller、异常处理的、视图解析的、HandlerMapping等等）
  
  	
  
   -->
	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 配置servlet中的初始化的参数
			contextConfigLocation 参数对应的路径是一个spring ioc的 配置文件
			
			在创建servlet对象时 会读取指定的配置文件创建WebApplicationContext对象 该对象管理的就是一个ioc容器
		
		 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-servlet.xml</param-value>
		</init-param>
		<!-- web容器启动时 创建servlet对象 -->
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- Map all requests to the DispatcherServlet for handling -->
	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<!-- / 表示所有的请求都被 前端控制器接收 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
  
  
  
  
  
  
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
</web-app>